I keep on getting this error and I have no clue how to fix it.

Rubix Cube and Rubix Cube Solver\Virtual Rubix Cube\main.py", line 4, in <module>
    class Game(Ursina):
TypeError: function() argument 'code' must be code, not str

I am going to use a different method that I used once when following along with a target shooter game.
In that the code for the game is not in a class. Here is what I mean here's a comparison:

The tutorial I'm following for the rubix cube (returning error):

    def __init__(Ursina):
        super().__init__()
        window.fullscreen = True
        Entity(model = 'quad', scale = 60, texture = 'white_cube', texture_scale = (60, 60), rotation_x = 90, y = -5,
               color = color.light_gray) # The plane
        Entity(model = 'sphere', scale = 100, texture = 'textures/pool-tile-texture.png', double_sided = True) # the sky
        Entity(model = 'models/xyz', texture = 'textures/xyz', scale = 0.8) # left-handed xyz plane
        EditorCamera()
        camera.world_position (0, 0, -15)

        self.load_game()

    def load_game(self):
        pass
class Game(Ursina):
    def input(self, key):
        super().input(key)



The tutorial I followed a month or two ago to try my hand at game making:
Sky()
player = FirstPersonController(y=2, origin_y=-.5)
ground = Entity(model='plane', scale=(100, 1, 500), color=color.lime, texture="white_cube",
                texture_scale=(100, 100), collider='box')

wall_1 = Entity(model="cube", collider="box", position=(-8, 0, 0), scale=(8, 5, 1), rotation=(0, 0, 0),
                texture="brick", texture_scale=(5, 5), color=color.rgb(255, 128, 0))
wall_2 = duplicate(wall_1, z=5)
wall_3 = duplicate(wall_1, z=10)
wall_4 = Entity(model="cube", collider="box", position=(-15, 0, 10), scale=(1, 5, 20), rotation=(0, 0, 0),
                texture="brick", texture_scale=(5, 5), color=color.rgb(255, 128, 0))

gun = Entity(model="assets/gun.obj", parent=camera.ui,
             scale=0.08, color=color.gold, position=(0.3, -0.2), rotation=(-5, -10, -10))


I will have to figure out how to substitute any code that requires the use of classes (for example, func(self), super().__init__())
