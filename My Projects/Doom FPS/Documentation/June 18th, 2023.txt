I figured out why my raycasting wasn't working, I found several small little mistakes, but the only one that mattered was that I forgot to replace
pass with self.ray_cast() in the update(self) function in the RayCasting class.

Now I have to figure out a new error, which is why my ray cast is breaking up a little the further it gets  (it has rips in it).
Never mind, it's okay for it to have some "rips".

Moving onto 3d projection (drawing out the actual game surroundings using the super important 'minimap')
Uses more trigonometric formulas, grid logic, and cartesian system logic.

9:25ish PM
Update:
I found out that the minimap will not be shown in a seperate pygame window or anything, it will simply not be drawn. The minimap is still very important though.
Again, it's not really a minimap, it's just a 2d visualization of the game logic (that is not drawn, so it's not really visualized, but you probably
get what I mean)


9:41 PM Update:
Done 3d projection, it was much, much simpler logic than I expected. This is probably because the raytracing part of the video did all the heavy work,
so I'll make sure to rewatch that as many times as it takes to understand the math being used and why it is being used.
